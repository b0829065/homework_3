{"version":3,"sources":["logo.svg","profile.js","sign_in.js","App.js","reportWebVitals.js","index.js"],"names":["UserGithub","props","state","account","name","avatar_url","about","company","html_url","$","get","this","source","result","console","log","data","setState","login","bio","created_at","updated_at","src","alt","React","Component","ReactDOM","render","document","getElementById","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"iMAAe,I,6DCITA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,GACTC,KAAK,GACLC,WAAY,GACZC,MAAM,GACNC,QAAQ,GACRC,SAAS,IARE,E,qDAWnB,WAAqB,IAAD,OAChBC,IAAEC,IAAIC,KAAKV,MAAMW,QAAO,SAACC,GACrBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACVd,QAASa,EAAKE,MACdd,KAAMY,EAAKZ,KACXC,WAAYW,EAAKX,WACjBC,MAAOU,EAAKG,IACZZ,QAASS,EAAKT,QACdC,SAAUQ,EAAKR,SACfY,WAAYJ,EAAKI,WACjBC,WAAYL,EAAKK,kB,oBAKjC,WACI,OACI,gCACI,oDAAuBV,KAAKT,MAAMC,WAClC,iDAAmB,uBACf,qBAAKmB,IAAKX,KAAKT,MAAMG,WAAYkB,IAAI,KAAS,0BAClD,2CAAa,uBAAb,oBAEKZ,KAAKT,MAAME,QAAU,uBAC1B,gDAAkB,uBACbO,KAAKT,MAAMI,SAAW,uBAC3B,2CAAa,uBAAb,MACQK,KAAKT,MAAMM,YAAc,uBACjC,qDAAuB,uBAAvB,OACSG,KAAKT,MAAMK,WAAa,uBACjC,8CAAiBI,KAAKT,MAAMkB,WAA5B,IAAwC,uBAAxC,eACiBT,KAAKT,MAAMmB,qB,GA9CnBG,IAAMC,WAmD/BC,IAASC,OACL,cAAC,EAAD,CAAYf,OAAO,0CACnBgB,SAASC,eAAe,SAIb7B,Q,gFCjCG8B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,0CACjBC,iBAAkB,YAClBC,gBACyB,UAAvBN,EAAMO,QAAQC,KAAmBR,EAAMO,QAAQE,KAAK,IAAMT,EAAMO,QAAQE,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQb,EAAMc,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPC,UAAWvB,EAAMc,QAAQ,IAE3BU,OAAQ,CACNX,OAAQb,EAAMc,QAAQ,EAAG,EAAG,QCtCjBW,MAbf,WACE,OAIE,aAHA,CAGA,OAAKC,UAAU,MAAf,SACE,8BACG,cAAC,EAAD,SCCMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdjC,IAASC,OACP,cAAC,IAAMwC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B6B,M","file":"static/js/main.abbd0b67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport $ from 'jquery';  //要npm install jquery 欸\r\n\r\nclass UserGithub extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: '',\r\n            name:'',\r\n            avatar_url: '',\r\n            about:'',\r\n            company:'',\r\n            html_url:'',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        $.get(this.props.source,(result) => {\r\n            console.log(result);\r\n            const data = result;\r\n            if (data) { \r\n                this.setState({\r\n                    account: data.login,\r\n                    name: data.name,\r\n                    avatar_url: data.avatar_url,\r\n                    about: data.bio,\r\n                    company: data.company,\r\n                    html_url: data.html_url,\r\n                    created_at: data.created_at,\r\n                    updated_at: data.updated_at,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>This is user from {this.state.account}</h1>\r\n                <h3>My face like...<br />\r\n                    <img src={this.state.avatar_url} alt=\"\"></img><br/></h3>\r\n                <h1>Who am I?<br />\r\n                    My name is 廷\r\n                    {this.state.name}</h1><br />\r\n                <h3>This html ... <br />                    \r\n                    {this.state.about}</h3><br/>\r\n                <h3>find me? <br />\r\n                    in {this.state.html_url}</h3><br />\r\n                <h3>what I doing now ? <br />\r\n                    I'm {this.state.company}</h3><br />\r\n                <h3>created_at: {this.state.created_at} <br />\r\n                    updated_at: {this.state.updated_at}</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nReactDOM.render(\r\n    <UserGithub source=\"https://api.github.com/users/b0829065\" />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nexport default UserGithub;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website 由material-ui提供基礎模組\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n  const styleArgument = {color:'goldenrod'};\r\n  const changeText=(event)=>{\r\n    console.log(event.target)\r\n    event.target.innerText = event.target.innerText + \" 你的帳號密碼我就收下了！\"\r\n    }\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n          <p style={styleArgument}>\r\n          長庚大學 CGU</p>\r\n          <hr></hr>\r\n          學術店堂登入介面\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"帳號吃吃\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"密碼吃吃\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={changeText}\r\n            >\r\n            Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport UserGithub from './profile.js'\nimport SignInSide from './sign_in.js'\nfunction App() {\n  return (\n    // <div className=\"App\">\n    // {SignInSide()}\n    // </div>\n    <div className=\"App\">\n      <div>\n        {<UserGithub/>}\n      </div>\n    </div>\n\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}